
package yashisuperflatpresets;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.event.ListDataListener;

/**
 *
 * @author yashi
 */


public class MainWindow extends javax.swing.JFrame {

    private ArrayList<String> demoPresetArr_data = new ArrayList<String>();
    private ArrayList<String> blockArr_id = new ArrayList<String>();
    private ArrayList<String> blockArr_data = new ArrayList<String>();
    private ArrayList<String> demoPresetArr_name = new ArrayList<String>();
    private ArrayList<String> biomeArr_name = new ArrayList<String>();
    private ArrayList<String> blockColorArr_name = new ArrayList<String>();
    private ArrayList<String> blockArr_name = new ArrayList<String>();
    public DefaultComboBoxModel<String> demoPresetList = new DefaultComboBoxModel<String>();
    public DefaultComboBoxModel<String> biomeList = new DefaultComboBoxModel<String>();
    public DefaultComboBoxModel<String> blockColorList = new DefaultComboBoxModel<String>();
    public DefaultComboBoxModel<String> blockList = new DefaultComboBoxModel<String>();
    private ArrayList<String> tempBlockData = new ArrayList<String>();
    private ArrayList<String> tempBlockID = new ArrayList<String>();
    private ArrayList<String> tempBlockNumber = new ArrayList<String>();
    public DefaultListModel blockSettingList = new DefaultListModel();
    
    private void initData() {
        Datas datainit = new Datas();
        
        demoPresetArr_data = datainit.demoPreset(1);
        demoPresetArr_name = datainit.demoPreset(3);
        biomeArr_name = datainit.biome(2);
        blockColorArr_name = datainit.blockColor(2);
        blockArr_id = datainit.block(0);
        blockArr_data = datainit.block(1);
        blockArr_name = datainit.block(2);
        
        for (String name : demoPresetArr_name) {
            demoPresetList.addElement(name);
        }
        demoPresetSelect.setModel(demoPresetList);
        for (String name : biomeArr_name) {
            biomeList.addElement(name);
        }
        biomeSelect.setModel(biomeList);
        biomeSelect.setSelectedIndex(1);
        for (String name : blockColorArr_name) {
            blockColorList.addElement(name);
        }
        blockColorSelect.setModel(blockColorList);
        for (int i = 0; i < blockArr_name.size(); i++) {
            String nowblockArr_id = blockArr_id.get(i);
            blockList.addElement(nowblockArr_id + " / " + blockArr_name.get(i));
        }
        blockSelect.setModel(blockList);
        blockSelect.setSelectedIndex(8);
        
        blockSettingList.addElement("草方块x1"); tempBlockID.add("2"); tempBlockData.add("minecraft:grass"); tempBlockNumber.add("1");
        blockSettingList.addElement("泥土x2"); tempBlockID.add("3"); tempBlockData.add("minecraft:dirt"); tempBlockNumber.add("2");
        blockSettingList.addElement("基岩x1"); tempBlockID.add("7"); tempBlockData.add("minecraft:bedrock"); tempBlockNumber.add("1");
        blockSetting.setModel(blockSettingList);
        blockSetting.setSelectedIndex(2);
    }
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        System.out.println("[yashiSuperflatPresets] KagurazakaYashi.\nCurrent time is " + df.format(new Date())
        + "'\nSystem.getProperty('os.name') == '" + System.getProperty("os.name")
        + "'\nSystem.getProperty('os.version') == '" + System.getProperty("os.version")
        + "'\nSystem.getProperty('os.arch') == '" + System.getProperty("os.arch")
        + "'\nSystem.getProperty('java.version') == '" + System.getProperty("java.version")
        + "'\nSystem.getProperty('java.vendor') == '" + System.getProperty("java.vendor")
        + "'\nSystem.getProperty('sun.arch.data.model') == '" + System.getProperty("sun.arch.data.model")
        + "'");
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txt_code = new javax.swing.JTextField();
        btn_code_l = new javax.swing.JButton();
        btn_code_g = new javax.swing.JButton();
        demoPresetSelect = new javax.swing.JComboBox();
        btn_demoPresetSelect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        blockSetting = new javax.swing.JList();
        blockSelect = new javax.swing.JComboBox();
        btn_insD = new javax.swing.JButton();
        btn_insU = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        sel_village = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        num_village1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        num_village2 = new javax.swing.JTextField();
        sel_mineshaft = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        num_mineshaft = new javax.swing.JTextField();
        sel_stronghold = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        num_stronghold1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        num_stronghold2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        num_stronghold3 = new javax.swing.JTextField();
        sel_biome = new javax.swing.JCheckBox();
        num_biome = new javax.swing.JTextField();
        sel_dungeon = new javax.swing.JCheckBox();
        sel_decoration = new javax.swing.JCheckBox();
        sel_lake = new javax.swing.JCheckBox();
        sel_lava_lake = new javax.swing.JCheckBox();
        sel_oceanmonument = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        num_mcv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        biomeSelect = new javax.swing.JComboBox();
        sel_selectall = new javax.swing.JCheckBox();
        btn_paste = new javax.swing.JButton();
        btn_copy = new javax.swing.JButton();
        blockColorSelect = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_block_number = new javax.swing.JTextField();
        sel_blockname = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("雅诗MC超平坦世界个性化预设生成器 v0.8");
        setMinimumSize(null);
        setSize(new java.awt.Dimension(800, 498));

        jLabel2.setText("将下面的预设方案输入到MC预设框或分享：");

        txt_code.setText("3;minecraft:bedrock,2*minecraft:dirt,minecraft:grass;1;village");

        btn_code_l.setText("↓ 载入方案 ↓");
        btn_code_l.setEnabled(false);
        btn_code_l.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_code_lActionPerformed(evt);
            }
        });

        btn_code_g.setText("↑ 生成方案 ↑");
        btn_code_g.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_code_gActionPerformed(evt);
            }
        });

        demoPresetSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "经典平坦" }));
        demoPresetSelect.setToolTipText("");

        btn_demoPresetSelect.setText("← 应用预设");
        btn_demoPresetSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_demoPresetSelectActionPerformed(evt);
            }
        });

        jLabel1.setText("方块设置（从顶端到底端）");

        blockSetting.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "草方块x1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        blockSetting.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(blockSetting);

        blockSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "空气" }));
        blockSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockSelectActionPerformed(evt);
            }
        });

        btn_insD.setText("在当前选择下方插入");
        btn_insD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insDActionPerformed(evt);
            }
        });

        btn_insU.setText("在当前选择上方插入");
        btn_insU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insUActionPerformed(evt);
            }
        });

        btn_del.setText("删除当前选择");
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        jLabel4.setText("生成设置");

        sel_village.setSelected(true);
        sel_village.setText("生成村庄");
        sel_village.setToolTipText("对应生物群系：平原/沙漠/热带草原。决定村庄能否在特定生物群系里被生成。");
        sel_village.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel_villageActionPerformed(evt);
            }
        });

        jLabel5.setText("村庄大小（0为普通模式默认，1为超平坦默认，2以上成比例增加）：");

        num_village1.setText("1");
        num_village1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num_village1ActionPerformed(evt);
            }
        });

        jLabel6.setText("村庄之间相隔区块数量（最小9，默认32）：");

        num_village2.setText("32");

        sel_mineshaft.setText("生成废弃矿井");
        sel_mineshaft.setToolTipText("决定废弃矿井能否被生成。");

        jLabel7.setText("稀有度百分比（0.0-1.0。默认0.1，注意1.0通常会导致多个矿道同时生成）：");

        num_mineshaft.setText("0.1");

        sel_stronghold.setText("生成要塞");
        sel_stronghold.setToolTipText("决定要塞能否生成。");

        jLabel8.setText("当前世界中生成数量（默认3）：");

        num_stronghold1.setText("3");

        jLabel9.setText("离出生点和其它要塞的区块数量（最小1，默认32）：");

        num_stronghold2.setText("32");

        jLabel10.setText("要塞距离其生成点的集中度（最小1，默认3）：");

        num_stronghold3.setText("3");

        sel_biome.setText("生成生物群系特有建筑（神殿神庙等）  距离（最小9，默认32）：");
        sel_biome.setToolTipText("对应生物群系：沙漠（山丘）、丛林（山丘）、沼泽。决定生物群系所特有的结构（沙漠神殿、丛林神庙与沼泽小屋）能否生成。");

        num_biome.setText("32");

        sel_dungeon.setText("生成地牢");
        sel_dungeon.setToolTipText("决定地牢能否被生成。");

        sel_decoration.setText("生成花草树木");
        sel_decoration.setToolTipText("决定树木、草、花、南瓜装饰能否在特定生物群系中，在最上层方块适宜的情况下被生成。亦会将高度适宜的石头层用沙砾、泥土和矿石填充。");

        sel_lake.setText("生成湖泊");
        sel_lake.setToolTipText("决定湖能否被生成，同时湖周边可能会用沙子和甘蔗装饰。");

        sel_lava_lake.setText("生成岩浆");
        sel_lava_lake.setToolTipText("决定岩浆湖能否被生成。");

        sel_oceanmonument.setText("生成海底遗迹");
        sel_oceanmonument.setToolTipText("对应生物群系：深海。决定能否在水中生成海底遗迹。");

        jLabel11.setText("兼容MC版本：");

        num_mcv.setText("3");

        jLabel12.setText("生物群系：");

        biomeSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "草原" }));

        sel_selectall.setText("全选/全不选");
        sel_selectall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel_selectallActionPerformed(evt);
            }
        });

        btn_paste.setText("粘贴");
        btn_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pasteActionPerformed(evt);
            }
        });

        btn_copy.setText("复制");
        btn_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_copyActionPerformed(evt);
            }
        });

        blockColorSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "普通（白色）" }));

        jLabel3.setText("颜色：");

        jLabel13.setText("层数：");

        txt_block_number.setText("1");

        sel_blockname.setSelected(true);
        sel_blockname.setText("使用名称代替ID");

        jButton1.setText("帮助/参考资料/检查更新");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_code)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_copy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_paste)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_code_l, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(blockSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel13))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(blockColorSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txt_block_number, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btn_insD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_insU, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(btn_del, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_code_g, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(demoPresetSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(biomeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addComponent(btn_demoPresetSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sel_village)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(num_village2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(num_village1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(sel_mineshaft)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(sel_stronghold)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel8)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(num_stronghold1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(num_stronghold2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(num_stronghold3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(jLabel7)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(num_mineshaft, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sel_biome)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(num_biome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sel_dungeon)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sel_decoration)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sel_lake)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sel_lava_lake)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sel_oceanmonument))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(num_mcv, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)))
                                .addGap(0, 37, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sel_blockname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sel_selectall)
                                .addGap(45, 45, 45)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btn_paste)
                    .addComponent(btn_copy)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_code, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_code_l)
                    .addComponent(btn_code_g)
                    .addComponent(demoPresetSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_demoPresetSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(sel_selectall)
                    .addComponent(sel_blockname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(num_mcv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(biomeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sel_village)
                            .addComponent(jLabel5)
                            .addComponent(num_village1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(num_village2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sel_mineshaft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(num_mineshaft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sel_stronghold)
                            .addComponent(jLabel8)
                            .addComponent(num_stronghold1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(num_stronghold2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(num_stronghold3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sel_biome)
                            .addComponent(num_biome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sel_dungeon)
                            .addComponent(sel_decoration)
                            .addComponent(sel_lake)
                            .addComponent(sel_lava_lake)
                            .addComponent(sel_oceanmonument))
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(blockSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(blockColorSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txt_block_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(btn_insU)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_insD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_del)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_code_lActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_code_lActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_code_lActionPerformed

    private void blockSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blockSelectActionPerformed

    private void sel_villageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel_villageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sel_villageActionPerformed

    private void num_village1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num_village1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_num_village1ActionPerformed

    private void btn_insUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insUActionPerformed
        //在当前选择上方插入
        if (blockSetting.getSelectedIndex() >= 0) {
            int nowSelectBox = blockSetting.getSelectedIndex();
            int nowSelectBlock = blockSelect.getSelectedIndex();
//            if (nowSelectBox < 0) {
//                nowSelectBox = 1;
//            }
            String nowid = blockArr_id.get(nowSelectBlock);
            String nowdata = blockArr_data.get(nowSelectBlock);
            tempBlockID.add(nowSelectBox,insColor(nowid, 1));
            tempBlockData.add(nowSelectBox,insColor(nowdata, 2));
            tempBlockNumber.add(nowSelectBox,txt_block_number.getText());
            blockSettingList.add(nowSelectBox, insblock());
            blockSetting.setSelectedIndex(nowSelectBox);
            btn_delEnable();
        }
    }//GEN-LAST:event_btn_insUActionPerformed

    private void btn_insDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insDActionPerformed
        //在当前选择下方插入
        if (blockSetting.getSelectedIndex() >= 0) {
            int nowSelectBox = blockSetting.getSelectedIndex() + 1;
            int nowSelectBlock = blockSelect.getSelectedIndex();
//            if (nowSelectBox < 0) {
//                nowSelectBox = 0;
//            } else {
//                nowSelectBox++;
//            }
            String nowid = blockArr_id.get(nowSelectBlock);
            String nowdata = blockArr_data.get(nowSelectBlock);
            tempBlockID.add(nowSelectBox,insColor(nowid, 1));
            tempBlockData.add(nowSelectBox,insColor(nowdata, 2));
            tempBlockNumber.add(nowSelectBox,txt_block_number.getText());
            blockSettingList.add(nowSelectBox, insblock());
            blockSetting.setSelectedIndex(nowSelectBox);
            btn_delEnable();
        }
    }//GEN-LAST:event_btn_insDActionPerformed

    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
        //删除当前选择
        int nowSelect = blockSetting.getSelectedIndex();
        if (nowSelect >= 0 && tempBlockID.size() > 1) {
            int nowselect = blockSetting.getSelectedIndex();
            tempBlockID.remove(nowselect);
            tempBlockData.remove(nowselect);
            tempBlockNumber.remove(nowselect);
            blockSettingList.remove(nowselect);
            if (nowSelect + 1 <= tempBlockID.size()) {
                blockSetting.setSelectedIndex(nowSelect);
            }
            if (nowSelect - 1 >= 0) {
                blockSetting.setSelectedIndex(nowSelect-1);
            }
            if (tempBlockID.size() == 1) {
                blockSetting.setSelectedIndex(0);
            }
            btn_delEnable();
        }
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_demoPresetSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_demoPresetSelectActionPerformed
        //应用预设
        txt_code.setText(demoPresetArr_data.get(demoPresetSelect.getSelectedIndex()));
    }//GEN-LAST:event_btn_demoPresetSelectActionPerformed

    private void btn_code_gActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_code_gActionPerformed
        System.out.println("生成代码开始...");
        ArrayList<String> codeArr = new ArrayList<String>();
        System.out.println("导入版本号设置..." + num_mcv.getText());
        codeArr.add(num_mcv.getText());
        System.out.println("生成区块设置...");
        ArrayList<String> blockArr = new ArrayList<String>();
        for (int i = 0; i < tempBlockData.size(); i++) {
            String data = "";
            String num = tempBlockNumber.get(i);
            String nowSet = "";
            if (sel_blockname.isSelected()) {
                data = tempBlockData.get(i);
                nowSet = addblocknum(num, data);
                System.out.println("生成区块设置(名称模式)..." + nowSet);
            } else {
                data = tempBlockID.get(i);
                nowSet = addblocknum(num, data);
                System.out.println("生成区块设置(ID模式)..." + nowSet);
            }
            blockArr.add(0,nowSet);
        }
        String blocks = arr2str(blockArr,",");
        System.out.println("完成区块设置..." + blocks);
        codeArr.add(blocks);
        
        String biomeID = String.valueOf(biomeSelect.getSelectedIndex());
        System.out.println("导入生物群系设置..." + biomeID);
        codeArr.add(biomeID);
        
        System.out.println("生成环境设置...");
        ArrayList<String> optionArr = new ArrayList<String>();
        if (sel_village.isSelected()) {
            String optstr = "village(size=" + num_village1.getText() + " distance=" + num_village2.getText() + ")";
            if ("1".equals(num_village1.getText()) && "32".equals(num_village2.getText())) {
                optstr = "village";
            }
            System.out.println("生成村庄设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_mineshaft.isSelected()) {
            String optstr = "mineshaft(chance=" + num_mineshaft.getText() + ")";
            if ("0.1".equals(num_mineshaft.getText())) {
                optstr = "mineshaft";
            }
            System.out.println("生成废弃矿井设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_stronghold.isSelected()) {
            String optstr = "stronghold(count=" + num_stronghold1.getText() + " distance=" + num_stronghold2.getText() + " spread=" + num_stronghold3.getText() + ")";
            if ("3".equals(num_stronghold1.getText()) && "32".equals(num_stronghold2.getText()) && "3".equals(num_stronghold3.getText())) {
                optstr = "stronghold";
            }
            System.out.println("生成要塞设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_biome.isSelected()) {
            String optstr = "biome_1(distance=" + num_biome.getText() + ")";
            if ("32".equals(num_biome.getText())) {
                optstr = "biome_1";
            }
            System.out.println("生成生物群系特有结构设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_dungeon.isSelected()) {
            String optstr = "dungeon";
            System.out.println("生成地牢设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_decoration.isSelected()) {
            String optstr = "decoration";
            System.out.println("生成装饰设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_lake.isSelected()) {
            String optstr = "lake";
            System.out.println("生成湖设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_lava_lake.isSelected()) {
            String optstr = "lava_lake";
            System.out.println("生成岩浆湖设置..." + optstr);
            optionArr.add(optstr);
        }
        if (sel_oceanmonument.isSelected()) {
            String optstr = "oceanmonument";
            System.out.println("生成海底遗迹设置..." + optstr);
            optionArr.add(optstr);
        }
        String options = arr2str(optionArr,",");
        System.out.println("完成环境设置..." + options);
        codeArr.add(options);
        
        String okstr = arr2str(codeArr,";");
        System.out.println("完成代码生成..." + okstr);
        txt_code.setText(okstr);
        System.out.println("生成代码完成。");
    }//GEN-LAST:event_btn_code_gActionPerformed

    private void btn_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_copyActionPerformed
        StringSelection stringSelection = new StringSelection(txt_code.getText());
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection, null);
    }//GEN-LAST:event_btn_copyActionPerformed

    private void btn_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pasteActionPerformed
//        Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null);
        Transferable t = Toolkit.getDefaultToolkit()  
                    .getSystemClipboard().getContents(null);  
            try {  
                if (t != null  
                        && t.isDataFlavorSupported(DataFlavor.stringFlavor)) {
                    // 先判断开始取得的可传输的数据是不是文字, 如果是, 取得这些文字 
                    String s = (String) t.getTransferData(DataFlavor.stringFlavor);  
                    // 同样, 因为Transferable中的DataFlavor是多种类型的,  
                    // 所以传入DataFlavor这个参数, 指定要取得哪种类型的Data.  
                    txt_code.setText(s); 
                }  
            } catch (UnsupportedFlavorException ex) {  
                ex.printStackTrace();  
            } catch (IOException ex) {  
                ex.printStackTrace();  
            }  
    }//GEN-LAST:event_btn_pasteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            URI uri = new URI("http://yoooooooooo.com/yashi/?p=1632");
            Desktop.getDesktop().browse(uri);
        } catch (URISyntaxException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sel_selectallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel_selectallActionPerformed
        Boolean select = sel_selectall.isSelected();
        sel_village.setSelected(select);
        sel_mineshaft.setSelected(select);
        sel_stronghold.setSelected(select);
        sel_biome.setSelected(select);
        sel_dungeon.setSelected(select);
        sel_decoration.setSelected(select);
        sel_lake.setSelected(select);
        sel_lava_lake.setSelected(select);
        sel_oceanmonument.setSelected(select);
    }//GEN-LAST:event_sel_selectallActionPerformed

    private String arr2str (ArrayList<String> strarr, String breakcher) {
        String str = "";
        for (int i = 0; i < strarr.size(); i++) {
            String nowstr = strarr.get(i);
            if (i > 0) {
                str = str + breakcher + nowstr;
            } else {
                str = nowstr;
            }
        }
        return str;
    }
    
    private int bool2int (Boolean b) {
        if (b) {
            return 1;
        }
        return 0;
    }
    
    private String addblocknum(String num, String data) {
        if ("1".equals(num)) {
            return data;
        } else {
            return num + "*" + data;
        }
    }
    
    private void btn_delEnable() {
        if (tempBlockID.size() > 1) {
            btn_del.setEnabled(true);
        } else {
            btn_del.setEnabled(false);
        }
    }
    
    private void clearSelectBox() {
        //清空
        blockSetting.setSelectedIndex(-1);
        blockSettingList.removeAllElements();
        tempBlockData = null; tempBlockID = null; tempBlockNumber = null;
        ArrayList<String> tempBlockData = new ArrayList<String>();
        ArrayList<String> tempBlockID = new ArrayList<String>();
        ArrayList<String> tempBlockNumber = new ArrayList<String>();
    }
    
    private String insblock() {
//        System.out.println(tempBlockID); 
        int nowSelect = blockSelect.getSelectedIndex();
        String nowid = blockArr_id.get(nowSelect);
//        String nowdata = blockArr_data.get(nowSelect);
//        tempBlockID.add(insColor(nowid, 1));
//        tempBlockData.add(insColor(nowdata, 2));
//        tempBlockNumber.add(txt_block_number.getText());
        return insColor(nowid, 3) + blockArr_name.get(nowSelect) + "x" + txt_block_number.getText();
    }
    
    private String insColor(String nowid, int mode) {
        //mode 1:nowid 2:nowdata 3:colorname
        if (nowid.contains(":")) {
            String [] stringArr = nowid.split(":");
            String iscolor = stringArr[stringArr.length - 1];
            if (!"<color>".equals(iscolor)) {
                if (mode == 3) {
                    return "";
                }
                return nowid;
            }
            if (mode == 2) {
                return stringArr[0] + ":" + stringArr[1] + ":" + blockColorSelect.getSelectedIndex();
            } else if (mode == 1) {
                return stringArr[0] + ":" + blockColorSelect.getSelectedIndex();
            } else if (mode == 3) {
                return blockColorArr_name.get(blockColorSelect.getSelectedIndex());
            }
        }
        if (mode == 3) {
            return "";
        }
        return nowid;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    
    private void exit() {
        dispose();
        System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox biomeSelect;
    private javax.swing.JComboBox blockColorSelect;
    private javax.swing.JComboBox blockSelect;
    private javax.swing.JList blockSetting;
    private javax.swing.JButton btn_code_g;
    private javax.swing.JButton btn_code_l;
    private javax.swing.JButton btn_copy;
    private javax.swing.JButton btn_del;
    private javax.swing.JButton btn_demoPresetSelect;
    private javax.swing.JButton btn_insD;
    private javax.swing.JButton btn_insU;
    private javax.swing.JButton btn_paste;
    private javax.swing.JComboBox demoPresetSelect;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField num_biome;
    private javax.swing.JTextField num_mcv;
    private javax.swing.JTextField num_mineshaft;
    private javax.swing.JTextField num_stronghold1;
    private javax.swing.JTextField num_stronghold2;
    private javax.swing.JTextField num_stronghold3;
    private javax.swing.JTextField num_village1;
    private javax.swing.JTextField num_village2;
    private javax.swing.JCheckBox sel_biome;
    private javax.swing.JCheckBox sel_blockname;
    private javax.swing.JCheckBox sel_decoration;
    private javax.swing.JCheckBox sel_dungeon;
    private javax.swing.JCheckBox sel_lake;
    private javax.swing.JCheckBox sel_lava_lake;
    private javax.swing.JCheckBox sel_mineshaft;
    private javax.swing.JCheckBox sel_oceanmonument;
    private javax.swing.JCheckBox sel_selectall;
    private javax.swing.JCheckBox sel_stronghold;
    private javax.swing.JCheckBox sel_village;
    private javax.swing.JTextField txt_block_number;
    private javax.swing.JTextField txt_code;
    // End of variables declaration//GEN-END:variables
}
